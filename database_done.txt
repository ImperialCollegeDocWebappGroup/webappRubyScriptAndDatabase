=============================
Table "public.publishs"
 Column  |     Type      | Modifiers
---------+---------------+-----------
 usrname | character(15) | not null
 shows   | publishitem[] |

 Indexes:
    "uniqueuname2" UNIQUE CONSTRAINT, btree (usrname)
Foreign-key constraints:
    "publishs_usrname_fkey" FOREIGN KEY (usrname) REFERENCES userprofile(login)
============================
composite type : publishitem
 Column    |            Type             | Modifiers
-------------+-----------------------------+-----------
 content     | character varying(200)      |
 publishtime | timestamp without time zone |
==========================
  Table "public.friendlist"
 Column  |     Type      | Modifiers 
---------+---------------+-----------
 uname   | character(15) | not null
 friends | text[]        | not null
Indexes:
    "uniqueuname" UNIQUE CONSTRAINT, btree (uname)
Foreign-key constraints:
    "friendlist_uname_fkey" FOREIGN KEY (uname) REFERENCES userprofile(login)

==========================
   Table "public.userprofile"
   Column   |     Type      | Modifiers 
------------+---------------+-----------
 login      | character(15) | not null
 name       | text          | not null
 gender     | boolean       | 
 age        | integer       | not null
 height     | integer       | not null
 weight     | integer       | not null
 skincolour | integer       | not null
 clothes    | text[]        | 
 friends    | text[]        | 
 wholelook  | text[]        | 
 comments   | text[]        | 
Indexes:
    "userprofile_pkey" PRIMARY KEY, btree (login)
Referenced by:
    TABLE "friendlist" CONSTRAINT "friendlist_uname_fkey" FOREIGN KEY (uname) REFERENCES userprofile(login)
    TABLE "publishs" CONSTRAINT "publishs_usrname_fkey" FOREIGN KEY (usrname) REFERENCES userprofile(login)

==========================
==========================
==========================
==========================
==========================
CREATE TABLE friendlist(uname character(15) references userprofile(login) not null, friends text[] not null);
==========================
Add new friend relationship:
INSERT INTO friendlist VALUES ('Sam', ARRAY['nathan']);
INSERT INTO friendlist VALUES ('nathan', ARRAY['Sam']);
==========================
Add user:
INSERT INTO userprofile VALUES ('Sam2', 'Jiahao2', true, 30, 170, 65, 6, ARRAY['http://www.selfridges.com/en/givenchy-amerika-cuban-fit-cotton-jersey-t-shirt_242-3000831-15S73176511/?previewAttribute=Black']);
==========================
Delete friend relationship
DELETE FROM friendlist WHERE friends = ARRAY['Sam2'];
==========================
Add constaint unique
ALTER TABLE friendlist ADD CONSTRAINT uniqueuname UNIQUE (uname);
==========================
Add new friend:
UPDATE friendlist SET friends = array_append(friends, 'Sam2') WHERE uname = 'nathan';
==========================
Find name of friends of 'nathan':
SELECT name FROM userprofile WHERE login = (SELECT friends FROM friendlist WHERE uname = 'nathan');
==========================
Create index:
CREATE INDEX index_name on table_name (column_name);
==========================
Create publish table:
CREATE TABLE publishs(usrname character(15) references userprofile(login) not null  , shows publishitem[]);
==========================
Add unique constriant:
ALTER TABLE publishs ADD CONSTRAINT uniqueuname UNIQUE (usrname);
==========================
Find friends of 'nathan':
SELECT friends FROM friendlist WHERE uname = 'nathan';
==========================
==========================
Array Aggregte:
SELECT array_agg(upper(n)) FROM unnest(SELECT friends FROM friendlist WHERE uname = 'nathan') AS n;
==========================
Find friends:
SELECT  *  FROM (SELECT friends FROM friendlist WHERE uname = 'nathanâ€™) AS n; 
==========================
Find height of friends:
SELECT height FROM userprofile WHERE login in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan');
==========================
Find friends:
SELECT friends FROM friendlist WHERE uname = 'nathan';
==========================
Find friends:
SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan';
==========================
Find publishs of friends:
// query penyyouquan
SELECT shows FROM publishs WHERE usrname in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan');
==========================
Find publish contents of friends:
SELECT shows[1].content FROM publishs WHERE usrname in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan');
==========================
Publish content:
// real fa pengyouquan
UPDATE publishs SET shows = array_append(shows, ROW('my cloth', TIMESTAMP '2013-05-16 15:36:38')::publishitem) WHERE usrname = 'Sam2';
==========================
Fake publish content:
// fa penguyouquan
INSERT INTO publishs VALUES ('Sam',ARRAY[ROW('my selfridge', TIMESTAMP '2011-05-16 15:36:38')::publishitem]);
==========================
// kan pengyouquan
 SELECT usrname, unnest(shows) FROM publishs WHERE usrname in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan');
==========================
 SELECT showitem.content WHERE showitem in (SELECT unnest(shows) FROM publishs WHERE usrname in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan'));
==========================
REAL find publishs
SELECT usrname,(unnest(shows)).content,(unnest(shows)).publishtime AS ptime FROM publishs WHERE usrname in (SELECT unnest(friends) FROM friendlist WHERE uname = 'nathan') ORDER BY ptime DESC LIMIT 20;
=================
